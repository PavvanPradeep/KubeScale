---
apiVersion: v1
kind: Service
metadata:
  name: db
spec:
  selector:
    app: db
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
        - name: db
          image: mysql:8.0
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_DATABASE
              value: root
            - name: MYSQL_ROOT_PASSWORD
              value: root
          imagePullPolicy: IfNotPresent 
      volumes:
        - name: db-data
          persistentVolumeClaim:
            claimName: db-data

---
apiVersion: v1
kind: Service
metadata:
  name: web
spec:
  ports:
    - port: 8001
      targetPort: 8001
      nodePort: 30001  # Define nodePort here
  selector:
    app: web
  type: NodePort

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      containers:
        - name: web
          image: pavvanpradeep/product_management-web:latest
          ports:
            - containerPort: 8001
          env:
            - name: DATABASE_HOST
              value: db
          imagePullPolicy: IfNotPresent 
          volumeMounts:
            - name: app-volume
              mountPath: /app
      volumes:
        - name: app-volume
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: queue
spec:
  ports:
    - port: 8004 
  selector:
    app: queue

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: queue
spec:
  replicas: 1
  selector:
    matchLabels:
      app: queue
  template:
    metadata:
      labels:
        app: queue
    spec:
      containers:
        - name: queue
          image: pavvanpradeep/product_management-queue:latest
          command: ["python", "consumer.py"]
          imagePullPolicy: IfNotPresent 
          volumeMounts:
            - name: app-volume
              mountPath: /app
      volumes:
        - name: app-volume
          emptyDir: {}
